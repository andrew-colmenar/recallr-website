/* Modern Project Settings Styles */

.container {
  width: 100%;
  background-color: var(--background);
  color: var(--text-primary);
  min-height: 100%;
}

.content {
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem;
}

/* Header */
.header {
  margin-bottom: 2rem;
  padding-bottom: 1.5rem;
  border-bottom: 1px solid var(--border-color);
}

.headerContent {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.headerIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  background: linear-gradient(135deg, var(--accent-primary), var(--highlight-color));
  border-radius: 12px;
  color: var(--text-primary);
}

.title {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0 0 0.25rem 0;
  background: linear-gradient(90deg, var(--accent-primary), var(--highlight-color));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.subtitle {
  color: var(--text-secondary);
  font-size: 0.95rem;
  margin: 0;
}

/* Form */
.form {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

/* Sections */
.section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.sectionHeader {
  margin-bottom: 0.5rem;
}

.sectionTitle {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  color: var(--text-primary);
}

.sectionDescription {
  color: var(--text-secondary);
  font-size: 0.9rem;
  margin: 0;
  line-height: 1.5;
}

/* Form Grid */
.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.label {
  font-weight: 500;
  font-size: 0.9rem;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Inputs */
.input,
.textarea,
.numberInput {
  padding: 0.75rem 1rem;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  color: var(--text-primary);
  font-size: 0.9rem;
  transition: all 0.2s ease;
  font-family: inherit;
}

.input:focus,
.textarea:focus,
.numberInput:focus {
  outline: none;
  border-color: var(--accent-primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.input::placeholder,
.textarea::placeholder {
  color: var(--text-secondary);
}

.textarea {
  resize: vertical;
  min-height: 80px;
  line-height: 1.5;
}

.numberInput {
  width: 100%;
  max-width: 150px;
}

/* Preferences Cards */
.preferencesCard {
  background-color: var(--card-bg);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  overflow: hidden;
  transition: box-shadow 0.2s ease;
}

.preferencesCard:hover {
  box-shadow: var(--shadow-lg);
}

.cardContent {
  padding: 1.5rem;
}

/* Advanced Sections */
.advancedSection {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--border-color);
}

.advancedToggle {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  background: none;
  border: none;
  color: var(--accent-primary);
  font-weight: 500;
  font-size: 0.9rem;
  cursor: pointer;
  padding: 0.5rem 0;
  transition: color 0.2s ease;
}

.advancedToggle:hover {
  color: var(--accent-hover);
}

.advancedContent {
  margin-top: 1rem;
  padding: 1rem;
  background-color: var(--background);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.advancedField {
  margin-bottom: 1.5rem;
}

.advancedField:last-child {
  margin-bottom: 0;
}

.advancedLabel {
  display: block;
  font-weight: 500;
  font-size: 0.85rem;
  color: var(--text-primary);
  margin-bottom: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.advancedSubsection {
  margin-bottom: 2rem;
  padding: 1rem;
  background-color: var(--card-bg);
  border: 1px solid var(--border-color);
  border-radius: 8px;
}

.advancedSubsection:last-child {
  margin-bottom: 0;
}

.subsectionTitle {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 1rem 0;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid var(--border-color);
}

/* Input Error States */
.inputError {
  border-color: var(--error-color) !important;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1) !important;
}

.errorText {
  color: var(--error-color);
  font-size: 0.8rem;
  margin-top: 0.25rem;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

/* Array Container */
.arrayContainer {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.arrayItem {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.arrayInput {
  flex: 1;
  padding: 0.75rem 1rem;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  color: var(--text-primary);
  font-size: 0.85rem;
  transition: all 0.2s ease;
}

.arrayInput:focus {
  outline: none;
  border-color: var(--accent-primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.arrayInput::placeholder {
  color: var(--text-secondary);
}

.removeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background-color: rgba(239, 68, 68, 0.1);
  border: none;
  border-radius: 6px;
  color: var(--error-color);
  cursor: pointer;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.removeButton:hover {
  background-color: rgba(239, 68, 68, 0.2);
  transform: scale(1.05);
}

.addButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: transparent;
  border: 1px dashed var(--border-color);
  border-radius: 8px;
  color: var(--accent-primary);
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 500;
  font-size: 0.85rem;
  width: fit-content;
}

.addButton:hover {
  background-color: rgba(59, 130, 246, 0.05);
  border-color: var(--accent-primary);
}

/* Switch */
.switchContainer {
  display: flex;
  align-items: center;
}

.switchInput {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
}

.switchLabel {
  position: relative;
  display: inline-block;
  padding-left: 48px;
  cursor: pointer;
  user-select: none;
  min-height: 20px;
  display: flex;
  align-items: center;
  font-weight: 500;
  font-size: 0.75rem;
}

.switchLabel::before {
  content: '';
  position: absolute;
  left: 0;
  width: 40px;
  height: 20px;
  background-color: var(--input-bg);
  border-radius: 20px;
  transition: background-color 0.3s;
}

.switchLabel::after {
  content: '';
  position: absolute;
  left: 4px;
  width: 15px;
  height: 15px;
  background-color: var(--text-primary);
  border-radius: 50%;
  transition: transform 0.3s, background-color 0.3s;
  transform: translateX(0);
  top: 2.5px;
  box-shadow: var(--shadow-sm);
}

.switchInput:checked + .switchLabel::before {
  background-color: var(--accent-primary);
}

.switchInput:checked + .switchLabel::after {
  transform: translateX(20px);
}

.switchInput:focus + .switchLabel::before {
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Tooltips */
.tooltipContainer {
  position: relative;
  display: inline-block;
}

.tooltipIcon {
  cursor: pointer;
  color: var(--accent-primary);
  transition: color 0.2s ease;
}

.tooltipIcon:hover {
  color: var(--accent-hover);
}

.tooltipContent {
  position: absolute;
  left: 24px;
  top: -8px;
  background-color: var(--background-secondary);
  color: var(--text-primary);
  border-radius: 8px;
  padding: 0.75rem 1rem;
  font-size: 0.85rem;
  box-shadow: var(--shadow-lg);
  z-index: 100;
  min-width: 250px;
  max-width: 300px;
  line-height: 1.4;
  border: 1px solid var(--border-color);
}

/* Submit Section */
.submitSection {
  display: flex;
  justify-content: flex-end;
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
}

.submitButton {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.875rem 1.75rem;
  background: linear-gradient(135deg, var(--accent-primary), var(--highlight-color));
  color: var(--text-primary);
  border: none;
  border-radius: 8px;
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: var(--shadow-md);
}

.submitButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.submitButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Loading and Error States */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  color: var(--text-secondary);
  gap: 1rem;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(59, 130, 246, 0.1);
  border-top-color: var(--accent-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 4rem 1rem;
  color: var(--text-primary);
}

.errorContainer h2 {
  margin: 0 0 1rem 0;
  font-size: 1.5rem;
}

.errorContainer p {
  color: var(--text-secondary);
  margin: 0;
}

/* Notifications */
.errorMessage,
.successMessage {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem 1.25rem;
  border-radius: 8px;
  margin-bottom: 1.5rem;
  font-size: 0.9rem;
  animation: fadeIn 0.3s ease-out;
}

.errorMessage {
  background-color: rgba(239, 68, 68, 0.1);
  border-left: 4px solid var(--error-color);
  color: var(--text-primary);
}

.successMessage {
  background-color: rgba(16, 185, 129, 0.1);
  border-left: 4px solid var(--success-color);
  color: var(--text-primary);
}

.errorIcon,
.successIcon {
  font-size: 1.1rem;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .content {
    padding: 1rem;
  }
  
  .formGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .headerContent {
    flex-direction: column;
    text-align: center;
    gap: 0.75rem;
  }
  
  .title {
    font-size: 1.5rem;
  }
  
  .submitSection {
    justify-content: center;
  }
  
  .submitButton {
    width: 100%;
    justify-content: center;
  }
  
  .arrayItem {
    flex-direction: column;
    align-items: stretch;
    gap: 0.5rem;
  }
  
  .removeButton {
    align-self: flex-end;
  }
}